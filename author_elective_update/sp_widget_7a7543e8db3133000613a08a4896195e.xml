<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="DELETE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, $rootScope, spModal, spUtil) {
  /* widget controller */
  var c = this;

  $rootScope.$on('selectNote', function(event, data) {
    c.server.get({
      action: 'getNote',
      noteID: $rootScope.noteID
    }).then(function(r) {
      c.data.title = r.data.note.title;
      c.data.note = r.data.note.note;
      c.data.noteID = r.data.note.sys_id;
    });
  });

  c.updateNote = function(updateType) {
    c.server.get({
      action: 'updateNote',
      noteID: c.data.noteID,
      noteBody: c.data.note,
      noteTitle: c.data.title
    }).then(function(r) {
      if (updateType == 'title' || updateType == 'body') {
        $rootScope.$emit('updateTitle', r.data);
      }
    });
  };

  // Actual delete logic
  c.deleteNote = function() {
    c.server.get({
      action: 'deleteNote',
      noteID: c.data.noteID
    }).then(function(r) {
      $rootScope.$emit('deleteNote', c.data.noteID);

      // Clear out the note body
      var deletedTitle = c.data.title;
      c.data.title = '';
      c.data.note = '';
      c.data.noteID = '';

      // ✅ Show trivial message only after delete succeeds
      spUtil.addTrivialMessage("The '" + deletedTitle + "' record has been deleted.");
    });
  };

  // Confirmation before delete
  c.confirmDelete = function() {
    spModal.confirm("Are you sure you want to delete this Note record?")
      .then(function(confirmed) {
        if (confirmed) {
          c.deleteNote();  // ✅ call delete only if confirmed
        }
      });
  };
}
]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>notes__body</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Notes  Body</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {

	if (input && input.noteID) {
		var note = new GlideRecord('x_snc_createnotes_note');
		if (note.get(input.noteID)) {
			if (input.action == 'getNote') {
				data.note = {};
				$sp.getRecordValues(data.note, note, "title, note, sys_id");
			}
			else if (input.action == 'updateNote') { 
				note.title = input.noteTitle; 
				note.note = input.noteBody; 
				note.update(); 
				// Need to update the data object with the new title
				// and first 20 characters of the note (do not want to write huge
				// strings to the Notes List widget)
				data.title = note.getValue('title');
				data.note = note.getValue('note').slice(0,20);
			}

			else if (input.action == 'deleteNote') { 
				note.deleteRecord(); 
			}
		}
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-05-30 18:16:57</sys_created_on>
        <sys_id>7a7543e8db3133000613a08a4896195e</sys_id>
        <sys_mod_count>15</sys_mod_count>
        <sys_name>Notes  Body</sys_name>
        <sys_package display_value="CreateNotes" source="x_snc_createnotes">df5fd9a5090232007f44e1046c8ff69f</sys_package>
        <sys_policy/>
        <sys_scope display_value="CreateNotes">df5fd9a5090232007f44e1046c8ff69f</sys_scope>
        <sys_update_name>sp_widget_7a7543e8db3133000613a08a4896195e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-09-17 09:22:47</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default" ng-show="c.data.noteID">
  <div class="panel-heading clearfix">
    <div class="row">
      <div class="col-md-11">
        <input class="form-control" id="note-title" ng-model="c.data.title" ng-change="c.updateNote('title')" ng-model-options="{debounce: 1000}"/>
      </div>
      <div class="col-md-1"> 
        <button class="btn btn-danger pull-right" ng-click="c.confirmDelete()"> 
          <span class="glyphicon glyphicon-trash"></span> 
        </button> 
      </div>
    </div>
  </div>
  <div class="panel-body">
    <textarea class="form-control" id="note-body" ng-model="c.data.note" ng-change="c.updateNote('body')" ng-model-options="{debounce: 1000}" ></textarea>
  </div>
</div>]]></template>
    </sp_widget>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="CreateNotes">df5fd9a5090232007f44e1046c8ff69f</application>
        <file_path/>
        <instance_id>46f31f1ddbd6f19c37d72a59139619c5</instance_id>
        <instance_name>dev202748</instance_name>
        <name>sp_widget_7a7543e8db3133000613a08a4896195e</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;custom&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function($scope, $rootScope, spModal, spUtil) {
  /* widget controller */
  var c = this;

  $rootScope.$on('selectNote', function(event, data) {
    c.server.get({
      action: 'getNote',
      noteID: $rootScope.noteID
    }).then(function(r) {
      c.data.title = r.data.note.title;
      c.data.note = r.data.note.note;
      c.data.noteID = r.data.note.sys_id;
    });
  });

  c.updateNote = function(updateType) {
    c.server.get({
      action: 'updateNote',
      noteID: c.data.noteID,
      noteBody: c.data.note,
      noteTitle: c.data.title
    }).then(function(r) {
      if (updateType == 'title' || updateType == 'body') {
        $rootScope.$emit('updateTitle', r.data);
      }
    });
  };

  // Actual delete logic
  c.deleteNote = function() {
    c.server.get({
      action: 'deleteNote',
      noteID: c.data.noteID
    }).then(function(r) {
      $rootScope.$emit('deleteNote', c.data.noteID);

      // Clear out the note body
      var deletedTitle = c.data.title;
      c.data.title = '';
      c.data.note = '';
      c.data.noteID = '';

      // ✅ Show trivial message only after delete succeeds
      spUtil.addTrivialMessage("The '" + deletedTitle + "' record has been deleted.");
    });
  };

  // Confirmation before delete
  c.confirmDelete = function() {
    spModal.confirm("Are you sure you want to delete this Note record?")
      .then(function(confirmed) {
        if (confirmed) {
          c.deleteNote();  // ✅ call delete only if confirmed
        }
      });
  };
}
]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css/&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;true&lt;/has_preview&gt;&lt;id&gt;notes__body&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function link(scope, element, attrs, controller) {  }]]&gt;&lt;/link&gt;&lt;name&gt;Notes  Body&lt;/name&gt;&lt;option_schema/&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function() {

	if (input &amp;&amp; input.noteID) {
		var note = new GlideRecord('x_snc_createnotes_note');
		if (note.get(input.noteID)) {
			if (input.action == 'getNote') {
				data.note = {};
				$sp.getRecordValues(data.note, note, "title, note, sys_id");
			}
			else if (input.action == 'updateNote') { 
				note.title = input.noteTitle; 
				note.note = input.noteBody; 
				note.update(); 
				// Need to update the data object with the new title
				// and first 20 characters of the note (do not want to write huge
				// strings to the Notes List widget)
				data.title = note.getValue('title');
				data.note = note.getValue('note').slice(0,20);
			}

			else if (input.action == 'deleteNote') { 
				note.deleteRecord(); 
			}
		}
	}
})();]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2019-05-30 18:16:57&lt;/sys_created_on&gt;&lt;sys_id&gt;7a7543e8db3133000613a08a4896195e&lt;/sys_id&gt;&lt;sys_mod_count&gt;15&lt;/sys_mod_count&gt;&lt;sys_name&gt;Notes  Body&lt;/sys_name&gt;&lt;sys_package display_value="CreateNotes" source="x_snc_createnotes"&gt;df5fd9a5090232007f44e1046c8ff69f&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CreateNotes"&gt;df5fd9a5090232007f44e1046c8ff69f&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_7a7543e8db3133000613a08a4896195e&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2025-09-17 09:22:47&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div class="panel panel-default" ng-show="c.data.noteID"&gt;
  &lt;div class="panel-heading clearfix"&gt;
    &lt;div class="row"&gt;
      &lt;div class="col-md-11"&gt;
        &lt;input class="form-control" id="note-title" ng-model="c.data.title" ng-change="c.updateNote('title')" ng-model-options="{debounce: 1000}"/&gt;
      &lt;/div&gt;
      &lt;div class="col-md-1"&gt; 
        &lt;button class="btn btn-danger pull-right" ng-click="c.confirmDelete()"&gt; 
          &lt;span class="glyphicon glyphicon-trash"&gt;&lt;/span&gt; 
        &lt;/button&gt; 
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="panel-body"&gt;
    &lt;textarea class="form-control" id="note-body" ng-model="c.data.note" ng-change="c.updateNote('body')" ng-model-options="{debounce: 1000}" &gt;&lt;/textarea&gt;
  &lt;/div&gt;
&lt;/div&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
        <payload_hash>1997165202</payload_hash>
        <record_name>Notes  Body</record_name>
        <reverted_from/>
        <source>e75108a08304f2106ddff4c6feaad345</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-09-17 09:22:47</sys_created_on>
        <sys_id>a207c46d83c03a106ddff4c6feaad326</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>19956fbcf760000001</sys_recorded_at>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-09-17 09:22:47</sys_updated_on>
        <type>Widget</type>
        <update_guid>aa0788a9c2c03a1035808472bc9ef0bd</update_guid>
        <update_guid_history>aa0788a9c2c03a1035808472bc9ef0bd:1997165202,085588a93ac03a10f84744e0b37d593e:390450204,8dc4c4a982c03a101ed4fb1c893ff24f:156339322,f26480a91ac03a109560d2f46f5711d3:-179315942,8914082548c03a109360b5e3c823700d:864062491,f5ef3f95a5803a10cc3bc8961fa30e51:156339322,a35fbf59f7803a10ae0abc647e9ceeb0:2122059082,77d1779170803a1072b2bf050a22e75e:0,6cd9f834010c36108fa76b90e428740b:-891824396,c5518424d604f21034e7f5b7229a833c:386351372</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete display_value="Notes  Body">9a8b5ac6838032106ddff4c6feaad340</sys_audit_delete>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-09-19 09:28:32</sys_created_on>
        <sys_db_object display_value="" name="sp_widget">sp_widget</sys_db_object>
        <sys_id>1cebec2aae9d4ae0a0fcaa86b187c400</sys_id>
        <sys_metadata>7a7543e8db3133000613a08a4896195e</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Notes  Body</sys_name>
        <sys_package display_value="CreateNotes" source="x_snc_createnotes">df5fd9a5090232007f44e1046c8ff69f</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_scope display_value="CreateNotes">df5fd9a5090232007f44e1046c8ff69f</sys_scope>
        <sys_scope_delete display_value="">64daa03572704d49a928bf08a985d6f9</sys_scope_delete>
        <sys_update_name>sp_widget_7a7543e8db3133000613a08a4896195e</sys_update_name>
        <sys_update_version display_value="sp_widget_7a7543e8db3133000613a08a4896195e">a207c46d83c03a106ddff4c6feaad326</sys_update_version>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-09-19 09:28:32</sys_updated_on>
    </sys_metadata_delete>
</record_update>
